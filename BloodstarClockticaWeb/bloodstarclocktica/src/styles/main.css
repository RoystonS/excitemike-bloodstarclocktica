body {
    background-color: #222;
    color:#eee;
    font-family: 'Open Sans', sans-serif;
    font-size:13px;
    margin:0;
    padding:0;
    scrollbar-color:#666 #333;
}
h1, h2, h3, h4, h5, h6 {
    margin:3px 0;
}
a, button, summary, .button {
    color:#eee;
    text-decoration: none;
    padding:2px;
    border:1px solid #666;
    background:#333;
    cursor: pointer;
    font-family: 'Open Sans', sans-serif;
    font-size:13px;
    font-weight:bold;
    letter-spacing: +1px;
}
.button {
    text-align: center;
}
a:hover, a:focus-visible, button:hover, button:focus-visible, summary:hover, summary:focus-visible, .button:hover, .button:focus-visible {
    border: 1px solid #3977FF;
    background:#3977FF;
}
input[type=text], input[type=password], textarea, select {
    background-color: #222;
    color:#eee;
    border: 1px solid #666;
}
input[type=text]:hover,
input[type=text]:focus-visible,
input[type=password]:hover,
input[type=tepasswordxt]:focus-visible,
textarea:hover, textarea:focus-visible,
select:hover, select:focus-visible {
    border: 1px solid #3977FF;
}
input[type=checkbox] {
    appearance: none;
    width: 16px;
    height: 16px;
    border:1px solid #666;
    background:#333;
    color:#eee;
    margin:0 6px 0 0;
    display:flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}
input[type=checkbox]:hover {
    border: 1px solid #3977FF;
    background:#3977FF;
}
input[type=checkbox]:checked::before {
    content:'\2713';
}
/* this is a copy of how Firefox styles autocompleted items for reference in case I want to override it here later
input:autofill {
    filter: grayscale(21%) brightness(88%) contrast(161%) invert(10%) sepia(40%) saturate(206%);
}
*/
/** chrome is pretty weird about autofill changing colors around, but I can apply a filter like this to work around it like this if desired */
/*input:-internal-autofill-selected {
    filter: grayscale(100%) invert(100%) sepia(40%) saturate(206%);
}*/
textarea {
    resize: both;
}
details {
    margin-bottom:6px;
}
summary::marker {
    content:"▶ ";
    color: #666;
    padding: 0;
    width: 40px;
}
details[open] > summary::marker {
    content:"▼ ";
}
summary:hover::marker {
    color: #eee;
}
summary {
    margin-bottom:6px;
    border:1px solid #66666600;
    background:none;
    user-select: none;
}
*:disabled {
    filter: blur(1px) opacity(50%) invert(25%);
}
#app {
    display:flex;
    flex-flow:column;
    height: 100vh;
    margin: 0;
    padding: 0;
}
#main-row {
    position: relative;
    flex: 1 1 0;
    display: flex;
    flex-flow:row nowrap;
    align-items: stretch;
    margin: 3px 0px 3px 6px;
    overflow: hidden;
}

ul#status {
    flex: none;
    display:flex;
    flex-flow:row;
    padding:0;
    margin:6px;
    list-style: none;
}
#status > li {
    margin-right:12px;
}
#menu > #windowTitle {
    text-align: center;
    margin: auto;
    font-weight: bold;
}

.twoColumnGrid {
    display: grid;
    grid-template-columns: auto 1fr;
    gap:6px;
}

.imageSettingsGrid {
    display: grid;
    grid-template-columns: auto auto 28px;
    gap:6px;
}
.fieldgroup {
    grid-column-start: 1;
    grid-column-end: 3;
    border-left: 4px solid #666;
    padding-left: 6px;
}
.userImage {
    border: 1px solid #666;
}
.row {
    display:flex;
    flex-flow: row;
}
.row > * {
    margin-right:6px;
}
.row > *:last-child {
    margin-right:0;
}
.column {
    display:flex;
    flex-flow: column nowrap;
}
.column > * {
    margin-bottom:6px;
}
.column > *:last-child {
    margin-right:0;
}
.hidden {display:none !important;}